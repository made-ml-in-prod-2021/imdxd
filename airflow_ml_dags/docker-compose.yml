version: '3.7'
# ====================================== AIRFLOW ENVIRONMENT VARIABLES =======================================
x-environment: &airflow_environment
  - AIRFLOW__CORE__EXECUTOR=LocalExecutor
  - AIRFLOW__CORE__FERNET_KEY=${FERNET_KEY}
  - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=False
  - AIRFLOW__CORE__LOAD_EXAMPLES=True
  - AIRFLOW__CORE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
  - AIRFLOW__CORE__STORE_DAG_CODE=True
  - AIRFLOW__CORE__STORE_SERIALIZED_DAGS=True
  - AIRFLOW__WEBSERVER__EXPOSE_CONFIG=True

x-airflow-image: &airflow_image apache/airflow:2.0.0-python3.6
# ====================================== /AIRFLOW ENVIRONMENT VARIABLES ======================================
services:
  postgres:
    image: postgres:12-alpine
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - ./airflow_db:/var/lib/postgresql

  mysql:
    restart: always
    image: mysql/mysql-server:5.7.28
    container_name: mlflow_db
    ports:
      - "3306:3306"
    environment:
      - MYSQL_DATABASE=mlflow
      - MYSQL_USER=mlflow
      - MYSQL_PASSWORD=mlflow
      - MYSQL_ROOT_PASSWORD=mlflow
    volumes:
      - ./mlflow_db:/var/lib/mysql

  init:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    depends_on:
      - postgres
    environment: *airflow_environment
    entrypoint: /bin/bash
    command: -c 'airflow db init && airflow users create --username admin --password admin --firstname Anonymous --lastname Admin --role Admin --email admin@example.org'

  webserver:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker
    restart: always
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    volumes:
      - logs:/opt/airflow/logs
    environment: *airflow_environment
    command: webserver

  mlflow:
    build:
      context: images/mlflow-docker
    image: mlflow-docker
    restart: always
    ports:
      - "5000:5000"
    command: mlflow server --host 0.0.0.0 --port 5000 --default-artifact-root /artifacts --backend-store-uri mysql+pymysql://mlflow:mlflow@mysql:3306/mlflow


  scheduler:
    build:
      context: images/airflow-docker
      args:
        AIRFLOW_BASE_IMAGE: *airflow_image
    image: airflow-docker

    restart: always
    depends_on:
      - postgres
    volumes:
      - logs:/opt/airflow/logs
      - ./dags/:/opt/airflow/dags/
      - ./data/:/opt/airflow/data/
      - /var/run/docker.sock:/var/run/docker.sock
    environment: *airflow_environment
    command: scheduler

  airflow-upload:
    build:
      context: images/airflow-upload
    image: airflow-upload
    restart: "no"

  airflow-preprocess:
    build:
      context: images/airflow-preprocess
    image: airflow-preprocess
    restart: "no"

  airflow-split:
    build:
      context: images/airflow-split
    image: airflow-split
    restart: "no"

  airflow-train:
    build:
      context: images/airflow-train
    image: airflow-train
    restart: "no"


volumes:
  logs:
